<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wak.backend.mapper.UserMapper">

    <resultMap id="UserVOResultMap" type="com.wak.backend.entity.vo.UserVO">
        <result column="username" property="username"/>
        <result column="name" property="name"/>
        <result column="phone" property="phone"/>
        <result column="email" property="email"/>
        <result column="gender" property="gender"/>
        <result column="last_modified_time" property="lastModifiedTime"/>
    </resultMap>

    <select id="selectByUsername" resultType="com.wak.backend.entity.User">
        SELECT *
        FROM user
        WHERE username = #{username}
    </select>
    <select id="selectUser" resultMap="UserVOResultMap">
        select username, name, phone, gender, email, last_modified_time
        from user
        <where>
            <if test="username != null and username != ''">
                AND username LIKE CONCAT('%', #{query.username}, '%')
            </if>
            <if test="phone != null and phone != ''">
                AND phone LIKE CONCAT('%', #{query.phone}, '%')
            </if>
        </where>
    </select>
    <select id="selectAllUser" resultMap="UserVOResultMap">
        select username, name, phone, gender, email, last_modified_time
        from user
    </select>

    <insert id="insert">
        INSERT INTO user (username, name, phone, gender,
                          email, password)
        VALUES (#{username}, #{name}, #{phone}, #{gender},
                #{email}, #{password})
    </insert>

    <update id="update">
        UPDATE user
        SET company            = #{company},
            name               = #{name},
            phone              = #{phone},
            gender             = #{gender},
            email              = #{email},
            password           = #{password},
            status             = #{status},
            last_modified_time = #{lastModifiedTime}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE
        FROM user
        WHERE id = #{id}
    </delete>

</mapper>